<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>hexo 一键发布文章</title>
      <link href="/2018/12/09/Hexo%20%E4%B8%80%E9%94%AE%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/12/09/Hexo%20%E4%B8%80%E9%94%AE%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="一、吐槽"><a href="#一、吐槽" class="headerlink" title="一、吐槽"></a>一、吐槽</h1><p>&emsp;&emsp;刚开始使用hexo的时候简直无法忍受繁杂的部署命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></p><h1 id="二、搞事情"><a href="#二、搞事情" class="headerlink" title="二、搞事情"></a>二、搞事情</h1><p>任意目录打开git bash，输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.fuck <span class="string">'!hexo clean;hexo g -d'</span></span><br><span class="line">git fuck</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;以后就可以通过git fuck来一键更新了，无需麻烦<br><br><br>&emsp;&emsp;取消别名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unalias</span> fuck</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 骚操作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>phpstudy环境下phpmyadmin页面打开缓慢、卡顿解决办法</title>
      <link href="/2018/12/08/phpstudy%E7%8E%AF%E5%A2%83%E4%B8%8Bphpmyadmin%E9%A1%B5%E9%9D%A2%E6%89%93%E5%BC%80%E7%BC%93%E6%85%A2%E3%80%81%E5%8D%A1%E9%A1%BF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2018/12/08/phpstudy%E7%8E%AF%E5%A2%83%E4%B8%8Bphpmyadmin%E9%A1%B5%E9%9D%A2%E6%89%93%E5%BC%80%E7%BC%93%E6%85%A2%E3%80%81%E5%8D%A1%E9%A1%BF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;在我的linux环境下安装的lnmp和lamp环境都没有出现过phpmyadmin页面卡顿的情况，甚至在windows下，我使用appserv亦没有这样的糟糕体验。<br><a id="more"></a></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>&emsp;&emsp;1.下载最新版本的phpmyadmin：<a href="https://www.phpmyadmin.net" target="_blank" rel="noopener">https://www.phpmyadmin.net</a><br><br>&emsp;&emsp;2.将下载好的phpmyadmin解压出来，重命名后放到原phpmyadmin同目录下<center style="padding:10px"><img src="http://img.guobinjie.top/image/phpmyadmin.jpg" alt="image"></center><br><br>&emsp;&emsp;3.修改配置文件，将localhost修改为127.0.0.1<center style="padding:10px"><img src="http://img.guobinjie.top/image/phpmyadminconfig.jpg" alt="image"><img src="http://img.guobinjie.top/image/phpmyadminconfig2.jpg" alt="image"></center><br><br>&emsp;&emsp;fuck（phpmyadmin），这里访问phpmyadmin的方式就是：<font color="#E84758">127.0.0.1/fuck</font>，因为我将其命名为fuck了 =。=<br><br>&emsp;&emsp;卡顿的情况会有所改善，但还是没有其他环境下那么丝滑…至于效果的话，各位看官亲测一下好了</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpmyadmin </tag>
            
            <tag> phpstudy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>3分钟为反向代理架设的Gogs增加https服务(nginx)</title>
      <link href="/2018/10/14/3%E5%88%86%E9%92%9F%E4%B8%BA%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9E%B6%E8%AE%BE%E7%9A%84gogs%E5%A2%9E%E5%8A%A0https%E6%9C%8D%E5%8A%A1(nginx)/"/>
      <url>/2018/10/14/3%E5%88%86%E9%92%9F%E4%B8%BA%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9E%B6%E8%AE%BE%E7%9A%84gogs%E5%A2%9E%E5%8A%A0https%E6%9C%8D%E5%8A%A1(nginx)/</url>
      
        <content type="html"><![CDATA[<h3 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h3><p>&emsp;&emsp;我把Gogs架设在了阿里云学生机上，使用的是CentOS7.4 x64，利用宝塔Linux面板安装了lnmp的运行环境。<br><br>&emsp;&emsp;在此前尚未增加https的时候，我是利用nginx的反向代理，把80端口转发到3000端口<font color="#E84758">（Gogs的默认服务端口是3000）</font>就可以直接访问搭建完成的Gogs了，配置如下<br><a id="more"></a><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="二、增加Https"><a href="#二、增加Https" class="headerlink" title="二、增加Https"></a>二、增加Https</h3><p>&emsp;&emsp;<font color="#E84758">本文重点不在于解决搭建Gogs中出现的问题，望周知。<br></font><br></p><h5 id="2-1、申请HTTPS证书，并下载证书相关文件"><a href="#2-1、申请HTTPS证书，并下载证书相关文件" class="headerlink" title="2.1、申请HTTPS证书，并下载证书相关文件"></a>2.1、申请HTTPS证书，并下载证书相关文件</h5><p>&emsp;&emsp;在阿里云处填写相关信息并提交申请后，你可以下载到一个压缩包，其中包含了 fileName.pem / fileName.key 两个文件<center style="padding:10px"><img src="http://p8ruh7rsq.bkt.clouddn.com/image/DownloadZhengShuFile.png" alt="image"><img src="http://p8ruh7rsq.bkt.clouddn.com/image/ZhengShuFile.png" alt="image"></center></p><h5 id="2-2、修改Gogs配置文件"><a href="#2-2、修改Gogs配置文件" class="headerlink" title="2.2、修改Gogs配置文件"></a>2.2、修改Gogs配置文件</h5><p>&emsp;&emsp;打开FXtp或其他工具，在gogs的安装目录中 custom/conf/app.ini 文件中修改下列配置选项<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[server]</span><br><span class="line">PROTOCOL = https</span><br><span class="line"><span class="comment">#注意这里要改成https://</span></span><br><span class="line">ROOT_URL = https://www.host.com/</span><br><span class="line"><span class="comment">#证书文件</span></span><br><span class="line">CERT_FILE = custom/https/fileName.pem</span><br><span class="line">KEY_FILE = custom/https/fileName.pem</span><br></pre></td></tr></table></figure></p><h4 id="2-3、修改nginx反向代理配置"><a href="#2-3、修改nginx反向代理配置" class="headerlink" title="2.3、修改nginx反向代理配置"></a>2.3、修改nginx反向代理配置</h4><p>&emsp;&emsp;此前默认的设置如下<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;现在修改为下面的配置<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">ssl_certificate</span> /home/git/gogs/custom/https/fileName.pem;</span><br><span class="line"><span class="attribute">ssl_certificate_key</span> /home/git/gogs/custom/https/fileName.key;</span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line"><span class="attribute">ssl_protocols</span> SSLv2 SSLv3 TLSv1;</span><br><span class="line"><span class="attribute">ssl_ciphers</span> ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="comment">#这里主要也要将http://修改为https://</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> https://localhost:3000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="comment">#HTTP跳转HTTPS</span></span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span>  https://<span class="variable">$host</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改后重启nginx后就可以享受https了。</p><h3 id="三、心得"><a href="#三、心得" class="headerlink" title="三、心得"></a>三、心得</h3><p>&emsp;&emsp;事实上，在2.2这个步骤完成后就可以通过访问 https://你的IP地址:3000 看到，https实际上已经开启了。也就是说你如果不需要用域名访问你的gogs，直接开放3000端口，做到2.2步骤就可以了。<br><br>&emsp;&emsp;但我是通过开放443和80使用域名来进行端口转发的，这样的好处是：<font color="#E84758">只要开放80端口，就可以直接访问你的网站，而不需要一个网站开一个端口。</font></p>]]></content>
      
      
      <categories>
          
          <category> Gogs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
            <tag> gogs </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vultr主机搭建ssr</title>
      <link href="/2018/09/18/vultr%E4%B8%BB%E6%9C%BA%E6%90%AD%E5%BB%BAssr/"/>
      <url>/2018/09/18/vultr%E4%B8%BB%E6%9C%BA%E6%90%AD%E5%BB%BAssr/</url>
      
        <content type="html"><![CDATA[<h3 id="1-vultr机房测速"><a href="#1-vultr机房测速" class="headerlink" title="1.vultr机房测速"></a>1.vultr机房测速</h3><p>&emsp;&emsp;可以去网上搜索一下vultr中文网给的测速文件，是vultr中文网在官方公布的测试数据的基础上简单写了一个批处理文件，使用 Windows 系统的朋友可以下载测试脚本：<a href="https://www.vultrcn.com/goto/?url=aHR0cHM6Ly9maWxlZG93bi5tZS9PdGhlci9WdWx0cl9QaW5nX1Rlc3RfRm9yX1dpbmRvd3Muemlw" target="_blank" rel="noopener">点我下载！！！</a><br><br>&emsp;&emsp;压缩包解压缩后双击运行，按照下图提示进行操作即可。<center style="padding:10px"><img src="https://static.vultrcn.com/wp-content/uploads/2018/03/vultr-test01.png" alt="image"></center><br>&emsp;&emsp;注意脚本会对每个机房进行 10 次 Ping 测试，测试完成后请不要按任意键继续，否则会退出脚本。请先挑选出延迟较低的机房，然后再退出。<br><br>&emsp;&emsp;我选择的是Silicon Valley地区的服务器</p><h3 id="2-氪金"><a href="#2-氪金" class="headerlink" title="2.氪金"></a>2.氪金</h3><p>&emsp;&emsp;vultr用paypal充值5刀送25刀</p><a id="more"></a><h3 id="3-选机房购买服务器"><a href="#3-选机房购买服务器" class="headerlink" title="3.选机房购买服务器"></a>3.选机房购买服务器</h3><p>&emsp;&emsp;机房位置我选择了Silicon Valley，系统选Debian 9 x64，选$5的，$2.5是只能使用ipv6的，且每个月只有500GB（下载上传流量哪个多就算哪个）因为ipv6尚未成熟的关系，我就选择不用它了，勾选启用ipv6（蛮选的），后面就无关紧要了，你随意就好<br><img src="http://img.guobinjie.top/image/VPSConfig.png" alt="a"></p><h3 id="4-检查一下你的ip是否被河蟹"><a href="#4-检查一下你的ip是否被河蟹" class="headerlink" title="4.检查一下你的ip是否被河蟹"></a>4.检查一下你的ip是否被河蟹</h3><p>&emsp;&emsp;(一)<a href="http://tool.chinaz.com/port" target="_blank" rel="noopener">点我！！！</a>去扫描你的ip端口，如果你的22端口是开启状态，或者说能使用ssh服务的话，基本上你的ip是没问题的。<br><br>&emsp;&emsp;(二)<a href="http://ping.chinaz.com/" target="_blank" rel="noopener">点我！！！</a>测ping，不是红色的超时就说明你的ip是可以被ping通的<br><br>&emsp;&emsp;以上两步都检测都通过，则ip可用<br><br>&emsp;&emsp;不过世上不如意之事十之八九，有很多ip是被墙的，大部分情况是能ping通、但22端口关闭，无法使用ssh服务。这个时候等待五分钟<font color="#E84758">（服务器部署满5分钟后才可以destroy）</font>，然后删除主机，重新deploy one…<br><br></p><h3 id="5-在服务器上安装ssr服务"><a href="#5-在服务器上安装ssr服务" class="headerlink" title="5.在服务器上安装ssr服务"></a>5.在服务器上安装ssr服务</h3><p>&emsp;&emsp;输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</span><br></pre></td></tr></table></figure></p><p>按照提示输入配置，enjoy it~</p><ul><li>支持 限制 用户速度</li><li>支持 限制 用户设备数</li><li>支持 限制 用户总流量</li><li>支持 定时 流量清零</li><li>支持 显示 当前连接IP</li><li>支持 显示 SS/SSR连接+二维码</li><li>支持 一键安装 锐速</li><li>支持 一键安装 BBR</li><li>支持 一键封禁 垃圾邮件(SMAP)/BT/PT</li></ul><h3 id="6-安装谷歌BBR防阻塞协议"><a href="#6-安装谷歌BBR防阻塞协议" class="headerlink" title="6.安装谷歌BBR防阻塞协议"></a>6.安装谷歌BBR防阻塞协议</h3><p>&emsp;&emsp;输入以下命令进入一键管理脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ssrmu.sh</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;输入14并回车<center style="padding:10px"><img src="http://img.guobinjie.top/image/BBRconfig.png" alt="image"></center><br>&emsp;&emsp;输入1并回车<center style="padding:10px"> <img src="http://img.guobinjie.top/image/BBRconfig1.png" alt="image"></center><br>&emsp;&emsp;输入1并回车<center style="padding:10px"> <img src="http://img.guobinjie.top/image/BBRconfig2.png" alt="image"></center><br><br>&emsp;&emsp;之后在安装过程中如果提示Y/N? yes/no?根据提示的不同输入y或yes，<font color="#E84758">提示更换系统内核的时候按下tab键，选择不更换内核</font>。等待服务器重新启动完成后就可以正常使用SSR了</p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> ssr </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP转换gb2312编码xml为数组对象</title>
      <link href="/2018/09/02/php%E8%BD%AC%E6%8D%A2gb2312%E7%BC%96%E7%A0%81xml%E4%B8%BA%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1/"/>
      <url>/2018/09/02/php%E8%BD%AC%E6%8D%A2gb2312%E7%BC%96%E7%A0%81xml%E4%B8%BA%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;调用中间件接口的返回值是一个xml字符串，其中 <strong>charset=”GB2312”</strong>，但奇怪的是我使用 <strong>mb_detect_encoding()</strong> 函数来判断这个xml字符串，得到的结果却是  UTF-8。<strong>但由于 xml 中 charset 的值为 GB2312，所以导致了 simplexml_load_string() 函数无法成功解析这个xml字符串</strong>。<br></p><p>&emsp;&emsp;其实解决这个错误非常简单,使用 str_replace 函数将xml字符串中的编码格式替换为 UTF-8 后再使用json编码解码后就可以得到干净的数组元素。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$xml= str_replace(&apos;GB2312&apos;,&apos;UTF-8&apos;,$xml);</span><br><span class="line">$xml= simplexml_load_string($xml);</span><br><span class="line">$xml= json_encode($xml);//将对象转换个JSON</span><br><span class="line">$xml=json_decode($xml,JSON_UNESCAPED_UNICODE);//将json转换成数组</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> xml转array </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>

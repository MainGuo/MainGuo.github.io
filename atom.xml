<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郭彬杰的博客</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://mainguo.coding.me/blog/"/>
  <updated>2018-09-20T02:26:52.859Z</updated>
  <id>https://mainguo.coding.me/blog/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vultr主机搭建ssr</title>
    <link href="https://mainguo.coding.me/blog/2018/09/18/vultr%E4%B8%BB%E6%9C%BA%E6%90%AD%E5%BB%BAssr/"/>
    <id>https://mainguo.coding.me/blog/2018/09/18/vultr主机搭建ssr/</id>
    <published>2018-09-18T03:08:05.000Z</published>
    <updated>2018-09-20T02:26:52.859Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-vultr机房测速"><a href="#1-vultr机房测速" class="headerlink" title="1.vultr机房测速"></a>1.vultr机房测速</h3><p>&emsp;&emsp;可以去网上搜索一下vultr官方给的测速点，有很多.sh的ping测速脚本，选一个延迟低的机房位置。不过一般延迟以东京机房最低，但我选择了洛杉矶机房，听说是掉包率低，相对稳定一些，且延迟比起东京机房也不差多少。<br></p><h3 id="2-氪金"><a href="#2-氪金" class="headerlink" title="2.氪金"></a>2.氪金</h3><p>&emsp;&emsp;vultr用paypal充值5刀送25刀</p><a id="more"></a><h3 id="3-选机房购买服务器"><a href="#3-选机房购买服务器" class="headerlink" title="3.选机房购买服务器"></a>3.选机房购买服务器</h3><p>&emsp;&emsp;机房位置我选择了洛杉矶，系统选centos6（听吧友说centos7的防火墙会影响ssr的正常连接，需要自己去配置巴拉巴拉巴拉的），选$5的，第一个是只能使用ipv6的，且每个月只有500GB（下载上传流量哪个多就算哪个）因为ipv6尚未成熟的关系，我就选择不用它了，勾选启用ipv6（蛮选的），后面就无关紧要了，你随意就好<br><img src="http://p8ruh7rsq.bkt.clouddn.com/img/0918/vps_config.png" alt="http://p8ruh7rsq.bkt.clouddn.com/img/0918/vps_config.png"></p><h3 id="4-检查一下你的ip是否被河蟹"><a href="#4-检查一下你的ip是否被河蟹" class="headerlink" title="4.检查一下你的ip是否被河蟹"></a>4.检查一下你的ip是否被河蟹</h3><p>&emsp;&emsp;<a href="http://tool.chinaz.com/port" target="_blank" rel="noopener">(一)点我直接去扫描你的ip端口</a>，如果你的22端口是开启状态，或者说能使用ssh服务的话，基本上你的ip是没问题的。<br><br>&emsp;&emsp;<a href="http://ping.chinaz.com/" target="_blank" rel="noopener">(二)点我测ping</a>，不是红色的超时就说明你的ip是可以被ping通的<br><br>&emsp;&emsp;以上两步都检测都通过，则ip可用<br><br>&emsp;&emsp;不过世上不如意之事十之八九，有很多ip是被墙的，大部分情况是能ping通、但22端口关闭，无法使用ssh服务。这个时候等待五分钟，然后删除主机，重新deploy one…<br><br><br><strong>PS:</strong> 这里注意，如果你destroy后重新选择了同样的地方，马上部署后会发现你的IP没有改变，依旧是不可用的。这个时候换个地方… 操作灵活一点~  另外之所以等待五分钟是因为vultr部署后至少要等待5分钟后才能删除。</p><h3 id="5-部署ssr服务"><a href="#5-部署ssr服务" class="headerlink" title="5.部署ssr服务"></a>5.部署ssr服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><p>按照提示输入配置，enjoy it~</p><ul><li>支持 限制 用户速度</li><li>支持 限制 用户设备数</li><li>支持 限制 用户总流量</li><li>支持 定时 流量清零</li><li>支持 显示 当前连接IP</li><li>支持 显示 SS/SSR连接+二维码</li><li>支持 一键安装 锐速</li><li>支持 一键安装 BBR</li><li>支持 一键封禁 垃圾邮件(SMAP)/BT/PT</li></ul><h3 id="6-安装谷歌BBR防阻塞协议"><a href="#6-安装谷歌BBR防阻塞协议" class="headerlink" title="6.安装谷歌BBR防阻塞协议"></a>6.安装谷歌BBR防阻塞协议</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以root身份运行</span><br><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。<br>重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure></p><p>查看内核版本，显示为最新版就表示 OK 了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>返回值一般为：<br>net.ipv4.tcp_congestion_control = bbr<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.core.default_qdisc</span><br></pre></td></tr></table></figure></p><p>返回值一般为：<br>net.core.default_qdisc = fq<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure></p><p>返回值有 tcp_bbr 模块即说明 bbr 已启动。注意：并不是所有的 VPS 都会有此返回值，若没有也属正常.<br><br><br><br><strong>安装BBR原文地址 : <a href="https://teddysun.com/489.html" target="_blank" rel="noopener">秋水逸冰一键安装bbr</a></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-vultr机房测速&quot;&gt;&lt;a href=&quot;#1-vultr机房测速&quot; class=&quot;headerlink&quot; title=&quot;1.vultr机房测速&quot;&gt;&lt;/a&gt;1.vultr机房测速&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;可以去网上搜索一下vultr官方给的测速点，有很多.sh的ping测速脚本，选一个延迟低的机房位置。不过一般延迟以东京机房最低，但我选择了洛杉矶机房，听说是掉包率低，相对稳定一些，且延迟比起东京机房也不差多少。&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-氪金&quot;&gt;&lt;a href=&quot;#2-氪金&quot; class=&quot;headerlink&quot; title=&quot;2.氪金&quot;&gt;&lt;/a&gt;2.氪金&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;vultr用paypal充值5刀送25刀&lt;/p&gt;
    
    </summary>
    
      <category term="科学上网" scheme="https://mainguo.coding.me/blog/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="vpn" scheme="https://mainguo.coding.me/blog/tags/vpn/"/>
    
      <category term="ssr" scheme="https://mainguo.coding.me/blog/tags/ssr/"/>
    
      <category term="vps" scheme="https://mainguo.coding.me/blog/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>PHP转换gb2312编码xml为数组对象</title>
    <link href="https://mainguo.coding.me/blog/2018/09/02/PHP%E8%BD%AC%E6%8D%A2gb2312%E7%BC%96%E7%A0%81xml%E4%B8%BA%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1/"/>
    <id>https://mainguo.coding.me/blog/2018/09/02/PHP转换gb2312编码xml为数组对象/</id>
    <published>2018-09-02T15:24:04.000Z</published>
    <updated>2018-09-02T15:36:06.490Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;调用中间件接口的返回值是一个xml字符串，其中 <strong>charset=”GB2312”</strong>，但奇怪的是我使用 <strong>mb_detect_encoding()</strong> 函数来判断这个xml字符串，得到的结果却是  UTF-8。<strong>但由于 xml 中 charset 的值为 GB2312，所以导致了 simplexml_load_string() 函数无法成功解析这个xml字符串</strong>。<br></p><p>&emsp;&emsp;其实解决这个错误非常简单,使用 str_replace 函数将xml字符串中的编码格式替换为 UTF-8 后再使用json编码解码后就可以得到干净的数组元素。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$xml= str_replace(&apos;GB2312&apos;,&apos;UTF-8&apos;,$xml);</span><br><span class="line">$xml= simplexml_load_string($xml);</span><br><span class="line">$xml= json_encode($xml);//将对象转换个JSON</span><br><span class="line">$xml=json_decode($xml,JSON_UNESCAPED_UNICODE);//将json转换成数组</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;调用中间件接口的返回值是一个xml字符串，其中 &lt;strong&gt;charset=”GB2312”&lt;/strong&gt;，但奇怪的是我使用 &lt;strong&gt;mb_detect_encoding()&lt;/strong&gt; 函数来判断这个xml字符串，得到的结果却
      
    
    </summary>
    
      <category term="后端" scheme="https://mainguo.coding.me/blog/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="PHP" scheme="https://mainguo.coding.me/blog/tags/PHP/"/>
    
      <category term="xml转array" scheme="https://mainguo.coding.me/blog/tags/xml%E8%BD%ACarray/"/>
    
  </entry>
  
</feed>

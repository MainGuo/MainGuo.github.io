<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MainGuo的博客</title>
  
  <subtitle>MainGuo-blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.mainguo.top/"/>
  <updated>2018-12-09T10:11:39.309Z</updated>
  <id>https://blog.mainguo.top/</id>
  
  <author>
    <name>郭彬杰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo 一键发布文章</title>
    <link href="https://blog.mainguo.top/2018/12/09/Hexo%20%E4%B8%80%E9%94%AE%E6%93%8D%E4%BD%9C/"/>
    <id>https://blog.mainguo.top/2018/12/09/Hexo 一键操作/</id>
    <published>2018-12-09T09:50:35.000Z</published>
    <updated>2018-12-09T10:11:39.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、吐槽"><a href="#一、吐槽" class="headerlink" title="一、吐槽"></a>一、吐槽</h1><p>&emsp;&emsp;刚开始使用hexo的时候简直无法忍受繁杂的部署命令,不仅要输入以下命令来更新，并且还要在指定的目录下打开 git bash，这让怕麻烦的我十分难受…<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></p><a id="more"></a><h1 id="二、搞事情"><a href="#二、搞事情" class="headerlink" title="二、搞事情"></a>二、搞事情</h1><p>&emsp;&emsp;<font color="#E84758">注意事项：下面的命令中 C:\blog_backup 是我博客的文件夹路径，请替换为你自己博客的路径</font><br><br><br>任意目录打开 git bash ，输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.fuck <span class="string">'!cd C:\blog_backup;hexo clean;hexo g -d'</span></span><br><span class="line">git fuck</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;以后就可以在<font color="#E84758">任意目录下</font>通过<font color="#E84758"> git fuck</font> 来一键更新了。<br><br></p><h1 id="三、如何取消别名"><a href="#三、如何取消别名" class="headerlink" title="三、如何取消别名"></a>三、如何取消别名</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> alias.fuck</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、吐槽&quot;&gt;&lt;a href=&quot;#一、吐槽&quot; class=&quot;headerlink&quot; title=&quot;一、吐槽&quot;&gt;&lt;/a&gt;一、吐槽&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;刚开始使用hexo的时候简直无法忍受繁杂的部署命令,不仅要输入以下命令来更新，并且还要在指定的目录下打开 git bash，这让怕麻烦的我十分难受…&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo g -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.mainguo.top/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.mainguo.top/tags/hexo/"/>
    
      <category term="骚操作" scheme="https://blog.mainguo.top/tags/%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>phpstudy环境下phpmyadmin页面打开缓慢、卡顿解决办法</title>
    <link href="https://blog.mainguo.top/2018/12/08/phpstudy%E7%8E%AF%E5%A2%83%E4%B8%8Bphpmyadmin%E9%A1%B5%E9%9D%A2%E6%89%93%E5%BC%80%E7%BC%93%E6%85%A2%E3%80%81%E5%8D%A1%E9%A1%BF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://blog.mainguo.top/2018/12/08/phpstudy环境下phpmyadmin页面打开缓慢、卡顿解决办法/</id>
    <published>2018-12-07T16:16:13.437Z</published>
    <updated>2018-12-07T16:17:04.154Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在我的linux环境下安装的lnmp和lamp环境都没有出现过phpmyadmin页面卡顿的情况，甚至在windows下，我使用appserv亦没有这样的糟糕体验。<br><a id="more"></a></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>&emsp;&emsp;1.下载最新版本的phpmyadmin：<a href="https://www.phpmyadmin.net" target="_blank" rel="noopener">https://www.phpmyadmin.net</a><br><br>&emsp;&emsp;2.将下载好的phpmyadmin解压出来，重命名后放到原phpmyadmin同目录下<center style="padding:10px"><img src="http://img.guobinjie.top/image/phpmyadmin.jpg" alt="image"></center><br><br>&emsp;&emsp;3.修改配置文件，将localhost修改为127.0.0.1<center style="padding:10px"><img src="http://img.guobinjie.top/image/phpmyadminconfig.jpg" alt="image"><img src="http://img.guobinjie.top/image/phpmyadminconfig2.jpg" alt="image"></center><br><br>&emsp;&emsp;fuck（phpmyadmin），这里访问phpmyadmin的方式就是：<font color="#E84758">127.0.0.1/fuck</font>，因为我将其命名为fuck了 =。=<br><br>&emsp;&emsp;卡顿的情况会有所改善，但还是没有其他环境下那么丝滑…至于效果的话，各位看官亲测一下好了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;在我的linux环境下安装的lnmp和lamp环境都没有出现过phpmyadmin页面卡顿的情况，甚至在windows下，我使用appserv亦没有这样的糟糕体验。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://blog.mainguo.top/categories/PHP/"/>
    
    
      <category term="phpmyadmin" scheme="https://blog.mainguo.top/tags/phpmyadmin/"/>
    
      <category term="phpstudy" scheme="https://blog.mainguo.top/tags/phpstudy/"/>
    
  </entry>
  
  <entry>
    <title>3分钟为反向代理架设的Gogs增加https服务(nginx)</title>
    <link href="https://blog.mainguo.top/2018/10/14/3%E5%88%86%E9%92%9F%E4%B8%BA%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9E%B6%E8%AE%BE%E7%9A%84gogs%E5%A2%9E%E5%8A%A0https%E6%9C%8D%E5%8A%A1(nginx)/"/>
    <id>https://blog.mainguo.top/2018/10/14/3分钟为反向代理架设的gogs增加https服务(nginx)/</id>
    <published>2018-10-14T08:17:44.000Z</published>
    <updated>2018-11-20T01:39:16.588Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h3><p>&emsp;&emsp;我把Gogs架设在了阿里云学生机上，使用的是CentOS7.4 x64，利用宝塔Linux面板安装了lnmp的运行环境。<br><br>&emsp;&emsp;在此前尚未增加https的时候，我是利用nginx的反向代理，把80端口转发到3000端口<font color="#E84758">（Gogs的默认服务端口是3000）</font>就可以直接访问搭建完成的Gogs了，配置如下<br><a id="more"></a><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="二、增加Https"><a href="#二、增加Https" class="headerlink" title="二、增加Https"></a>二、增加Https</h3><p>&emsp;&emsp;<font color="#E84758">本文重点不在于解决搭建Gogs中出现的问题，望周知。<br></font><br></p><h5 id="2-1、申请HTTPS证书，并下载证书相关文件"><a href="#2-1、申请HTTPS证书，并下载证书相关文件" class="headerlink" title="2.1、申请HTTPS证书，并下载证书相关文件"></a>2.1、申请HTTPS证书，并下载证书相关文件</h5><p>&emsp;&emsp;在阿里云处填写相关信息并提交申请后，你可以下载到一个压缩包，其中包含了 fileName.pem / fileName.key 两个文件<center style="padding:10px"><img src="http://p8ruh7rsq.bkt.clouddn.com/image/DownloadZhengShuFile.png" alt="image"><img src="http://p8ruh7rsq.bkt.clouddn.com/image/ZhengShuFile.png" alt="image"></center></p><h5 id="2-2、修改Gogs配置文件"><a href="#2-2、修改Gogs配置文件" class="headerlink" title="2.2、修改Gogs配置文件"></a>2.2、修改Gogs配置文件</h5><p>&emsp;&emsp;打开FXtp或其他工具，在gogs的安装目录中 custom/conf/app.ini 文件中修改下列配置选项<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[server]</span><br><span class="line">PROTOCOL = https</span><br><span class="line"><span class="comment">#注意这里要改成https://</span></span><br><span class="line">ROOT_URL = https://www.host.com/</span><br><span class="line"><span class="comment">#证书文件</span></span><br><span class="line">CERT_FILE = custom/https/fileName.pem</span><br><span class="line">KEY_FILE = custom/https/fileName.pem</span><br></pre></td></tr></table></figure></p><h4 id="2-3、修改nginx反向代理配置"><a href="#2-3、修改nginx反向代理配置" class="headerlink" title="2.3、修改nginx反向代理配置"></a>2.3、修改nginx反向代理配置</h4><p>&emsp;&emsp;此前默认的设置如下<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;现在修改为下面的配置<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">ssl_certificate</span> /home/git/gogs/custom/https/fileName.pem;</span><br><span class="line"><span class="attribute">ssl_certificate_key</span> /home/git/gogs/custom/https/fileName.key;</span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line"><span class="attribute">ssl_protocols</span> SSLv2 SSLv3 TLSv1;</span><br><span class="line"><span class="attribute">ssl_ciphers</span> ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="comment">#这里主要也要将http://修改为https://</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> https://localhost:3000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="comment">#HTTP跳转HTTPS</span></span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.host.com;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span>  https://<span class="variable">$host</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改后重启nginx后就可以享受https了。</p><h3 id="三、心得"><a href="#三、心得" class="headerlink" title="三、心得"></a>三、心得</h3><p>&emsp;&emsp;事实上，在2.2这个步骤完成后就可以通过访问 https://你的IP地址:3000 看到，https实际上已经开启了。也就是说你如果不需要用域名访问你的gogs，直接开放3000端口，做到2.2步骤就可以了。<br><br>&emsp;&emsp;但我是通过开放443和80使用域名来进行端口转发的，这样的好处是：<font color="#E84758">只要开放80端口，就可以直接访问你的网站，而不需要一个网站开一个端口。</font></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、环境&quot;&gt;&lt;a href=&quot;#一、环境&quot; class=&quot;headerlink&quot; title=&quot;一、环境&quot;&gt;&lt;/a&gt;一、环境&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;我把Gogs架设在了阿里云学生机上，使用的是CentOS7.4 x64，利用宝塔Linux面板安装了lnmp的运行环境。&lt;br&gt;&lt;br&gt;&amp;emsp;&amp;emsp;在此前尚未增加https的时候，我是利用nginx的反向代理，把80端口转发到3000端口&lt;font color=&quot;#E84758&quot;&gt;（Gogs的默认服务端口是3000）&lt;/font&gt;就可以直接访问搭建完成的Gogs了，配置如下&lt;br&gt;
    
    </summary>
    
      <category term="Gogs" scheme="https://blog.mainguo.top/categories/Gogs/"/>
    
    
      <category term="https" scheme="https://blog.mainguo.top/tags/https/"/>
    
      <category term="gogs" scheme="https://blog.mainguo.top/tags/gogs/"/>
    
      <category term="nginx" scheme="https://blog.mainguo.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>PHP转换gb2312编码xml为数组对象</title>
    <link href="https://blog.mainguo.top/2018/09/02/php%E8%BD%AC%E6%8D%A2gb2312%E7%BC%96%E7%A0%81xml%E4%B8%BA%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1/"/>
    <id>https://blog.mainguo.top/2018/09/02/php转换gb2312编码xml为数组对象/</id>
    <published>2018-09-02T15:24:04.000Z</published>
    <updated>2018-11-20T01:39:14.277Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;调用中间件接口的返回值是一个xml字符串，其中 <strong>charset=”GB2312”</strong>，但奇怪的是我使用 <strong>mb_detect_encoding()</strong> 函数来判断这个xml字符串，得到的结果却是  UTF-8。<strong>但由于 xml 中 charset 的值为 GB2312，所以导致了 simplexml_load_string() 函数无法成功解析这个xml字符串</strong>。<br></p><p>&emsp;&emsp;其实解决这个错误非常简单,使用 str_replace 函数将xml字符串中的编码格式替换为 UTF-8 后再使用json编码解码后就可以得到干净的数组元素。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$xml= str_replace(&apos;GB2312&apos;,&apos;UTF-8&apos;,$xml);</span><br><span class="line">$xml= simplexml_load_string($xml);</span><br><span class="line">$xml= json_encode($xml);//将对象转换个JSON</span><br><span class="line">$xml=json_decode($xml,JSON_UNESCAPED_UNICODE);//将json转换成数组</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;调用中间件接口的返回值是一个xml字符串，其中 &lt;strong&gt;charset=”GB2312”&lt;/strong&gt;，但奇怪的是我使用 &lt;strong&gt;mb_detect_encoding()&lt;/strong&gt; 函数来判断这个xml字符串，得到的结果却
      
    
    </summary>
    
      <category term="PHP" scheme="https://blog.mainguo.top/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://blog.mainguo.top/tags/PHP/"/>
    
      <category term="xml转array" scheme="https://blog.mainguo.top/tags/xml%E8%BD%ACarray/"/>
    
  </entry>
  
</feed>
